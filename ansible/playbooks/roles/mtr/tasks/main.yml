---
test
## ANCHOR Create vars
- name: declare some vars
  set_fact:
    ips: ["{{server1}}", "{{server2}}"]
    whois_command: whois
    mtr_command: mtr -rw
    org_filter: OrgName
    gather:
    install_mtr:
    perform_mtr:

- name: gather whois information
  include_role:
    name: mtr_whois
  when: gather == true

## ANCHOR Check if MTR is installed, if not, install it
- name: Ensure MTR is installed
  package:
    name: mtr
    state: present
  when: ansible_facts['pkg_mgr'] in ['apt', 'yum', 'dnf'] and install_mtr == true

## ANCHOR Run an MTR against the 2 servers
- name: run mtr for each IP
  shell: "{{ mtr_command }} '{{ item }}'"
  loop: "{{ ips }}"
  when: item not in ansible_all_ipv4_addresses and perform_mtr == true
  register: mtrout

## ANCHOR Handle results
- name: Write MTR results to files on the remote host
  copy:
    content: "{{ item.stdout }}"
    dest: "/tmp/mtr_results_{{ item.item }}.txt"
  loop: "{{ mtrout.results }}"
  when: item.stdout_lines is defined and item.rc == 0 
  delegate_to: 172.16.101.183

- name: combine the files
  shell: for file in /tmp/mtr_result*; do cat "$file"; echo ""; done
  register: finalmtr
  delegate_to: 172.16.101.183

- name: get output
  debug:
    var: finalmtr.stdout_lines
  run_once: true

- name: cleanup files
  file:
    path: "/tmp/mtr_results_{{ item.item }}.txt"
    state: absent
  loop: "{{ mtrout.results }}"
  when: item.stdout_lines is defined and item.rc == 0
  delegate_to: 172.16.101.183