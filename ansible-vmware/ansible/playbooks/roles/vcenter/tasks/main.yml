---

- name: Enable AllowTcpForwarding on the vCenter appliance
  replace:
    path: /etc/ssh/sshd_config
    regexp: 'AllowTcpForwarding no'
    replace: 'AllowTcpForwarding yes'

- name: Restart SSHD for the forwarding changes to take effect
  service:
    name: sshd
    state: restarted

- name: Scrape Network for Available IP
  shell: 'ping -c 1 {{ item }}'
  ignore_errors: true
  register: Available_IP
  loop: "{{ free_ip_table }}"

- name: Gather All VM info
  no_log: true
  vmware_vm_info:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_pass }}"
    validate_certs: no
  register: vm_info
  delegate_to: localhost

- name: Scrape vCenter VM for detailed information
  vmware_guest_info:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_pass }}"
    datacenter: "{{ vcenter_datacenter}}"
    validate_certs: no
    name: "{{ vm_name }}"
  register: detailed_vm_info
  delegate_to: localhost

- name: Find datastore usage of vcsa hostnode
  vmware_datastore_info:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_pass }}"
    datacenter_name: "{{ vcenter_datacenter }}"
    name: "{{ detailed_vm_info.instance.hw_datastores[0] }}"
    validate_certs: false
  register: vcsa_host_datastore
  delegate_to: localhost

- name: Find cdrom info
  vmware.vmware_rest.vcenter_vm_info:
    vcenter_hostname: "{{ vcenter_hostname }}"
    vcenter_username: "{{ vcenter_username }}"
    vcenter_password: "{{ vcenter_pass }}"
    vcenter_validate_certs: false
    vm: "{{ detailed_vm_info.instance.moid }}"
  register: cdrominfo
  delegate_to: localhost

- name: Print Available IP's
  debug: 
    msg: "{{ Available_IP.results | map(attribute='stdout_lines') | list }}"

- name: Print VBR and ZVM machines
  debug:
    msg:
    - "{{ item.guest_name }}"
    - "{{ item.esxi_hostname }}"
    - "{{ item.ip_address }}"
    - "{{ item.mac_address }}"
    - "{{ item.power_state }}"
    - "{{ item.moid }}"
  loop: "{{ vm_info.virtual_machines }}"
  when: item.guest_name is search("veeam|Veeam|VEEAM|backup|Backup|vem|zerto|Zerto|ZVM|zvm")

- name: Print vCenter Networking
  ansible.builtin.debug:
    var: detailed_vm_info.instance.hw_eth0

- name: Print Current Snapshots
  ansible.builtin.debug:
    var: detailed_vm_info.instance.snapshots

- name: Print Host Info
  ansible.builtin.debug:
    var: detailed_vm_info.instance.hw_esxi_host

- name: Print VM CDROM Info
  ansible.builtin.debug:
    var: cdrominfo.value.cdroms

- name: Print VCSA datastore free space
  debug:
    msg: "The datastore that the VCSA is on has {{ vcsa_host_datastore.datastores[0].freeSpace | human_readable }} available."
